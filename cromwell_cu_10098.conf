include required("application")

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

system {
  # If 'true' then when Cromwell starts up, it tries to restart incomplete workflows
  workflow-restart = true

  # Cromwell will cap the number of running workflows at N
  max-concurrent-workflows = 100
}

call-caching {
  # Allows re-use of existing results for jobs you've already run
  # (default: false)
  enabled = true

  # Whether to invalidate a cache result forever if we cannot reuse them. Disable this if you expect some cache copies
  # to fail for external reasons which should not invalidate the cache (e.g. auth differences between users):
  # (default: true)
  invalidate-bad-cache-results = true
}

backend {
  default = "SGE"
  # default = "Local"
  providers {
    SGE {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
    
        # Limits the number of concurrent jobs (100 is the limit set by Computerome, but this can be raised by emailing Ali)
        concurrent-job-limit = 100

        # `script-epilogue` configures a shell command to run after the execution of every command block.
        #
        # If this value is not set explicitly, the default value is `sync`, equivalent to:
        # script-epilogue = "sync"
        #
        # To turn off the default `sync` behavior set this value to an empty string:
        script-epilogue = ""
   
        runtime-attributes = """
        Int cpu = 1
        Float? memory_gb = 128.0
        String? sge_project = 'cu_10098'
        """
    
        submit = """
        qsub \
        -V \
        -N ${job_name} \
        -d ${cwd} \
        -o ${out} \
        -e ${err} \
        -W group_list=${sge_project} -A ${sge_project} -l nodes=1:ppn=${cpu},walltime=100:00:00 \
        ${script}
        """
    
        kill = "qdel ${job_id}"
        check-alive = "qstat ${job_id}"
        job-id-regex = "([\\w.-]+)"

        filesystems {
          local {
            localization: [
              "soft-link", "hard-link", "copy"
              ]
            caching {
              duplication-strategy: [
                "soft-link", "hard-link", "copy"
                ]
              hashing-strategy: "path"
              check-sibling-md5: true
            }
          }
        }
      }
    }
  }
}

database {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    # jdbc:oracle:<drivertype>:<user>/<password>@<database>
    url = "jdbc:mysql://localhost:2801/cromwell_db?useSSL=false&rewriteBatchedStatements=true"
    user = "cromwell"
    password = "123456781!aA"
    driver = "com.mysql.jdbc.Driver"
    connectionTimeout = 30000
  }
}
